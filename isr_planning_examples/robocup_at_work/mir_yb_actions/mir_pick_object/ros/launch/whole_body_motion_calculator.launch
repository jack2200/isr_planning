<?xml version="1.0"?>
<!-- A demo launcher to compute reachable pose for the arm and rotational component for the base youBot.-->
<launch>
    <!-- whole body motion calculator will subscribe to these topics -->
    <arg name="whole_body_motion_pose_in" default="/whole_body_motion_calculator_pipeline/pose_in" />
    <arg name="whole_body_motion_even_in" default="/whole_body_motion_calculator_pipeline/event_in" />

    <!-- whole body motion calculator will publish on these topics -->
    <arg name="whole_body_motion_pose_out" default="/whole_body_motion_calculator_pipeline/pose_out" />
    <arg name="whole_body_motion_base_motion" default="/whole_body_motion_calculator_pipeline/base_motion" />
    <arg name="whole_body_motion_even_out" default="/whole_body_motion_calculator_pipeline/event_out" />

    <group ns="whole_body_motion_calculator_pipeline">
        <node pkg="mcr_manipulation_measurers" type="pose_transformer_node"
              name="pose_transformer" output="screen">

            <!-- the cycle rate of the node (in Hz) -->
            <param name="loop_rate" type="double" value="10"/>

            <param name="wait_for_transform" type="double" value="0.1"/>

            <!-- Reference frame to transform target pose -->
            <param name="target_frame" type="str" value="base_link"/>

            <!-- Flag to use node in trigger mode -->
            <param name="trigger" type="boolean" value="false"/>

            <!-- Pose in (geometry_msgs/PoseStamped) -->
            <remap from="~pose_in" to="$(arg whole_body_motion_pose_in)" />
        </node>

        <node pkg="mir_whole_body_motion_calculator" type="simple_whole_body_motion_calculator_node"
            name="whole_body_motion_calculator" output="screen">

            <!-- the cycle rate of the node (in hz) -->
            <param name="loop_rate"  type="double" value="10"/>

            <!-- to transfrom target pose onto these angular limits
                (flexible range for arm to grasp object) (rads)-->
            <param name="range_angle_min" type="double" value="-0.10" />
            <param name="range_angle_max" type="double" value="0.10" />

            <!-- Normally target pose is projected to min and max angle. Use offset angle
                 to project target pose inside the anglular limits-->
            <param name="offset_angle" type="double" value="0.0"/>

            <!-- the sampling step for linear variables (in meters) -->
            <param name="linear_step" type="double" value="0.05"/>

            <!-- allow base rotation to be calculated to grasp object -->
            <param name="allow_base_rotation" type="bool" value="false"/>

            <!-- threshold Radius to remove sampled poses inside along the radial line(m) -->
            <param name="base_length" type="double" value="0.9"/>  <!-- 50 cm-->
            <param name="base_width" type="double" value="0.70"/>

            <!-- Pose in (geometry_msgs/PoseStamped) -->
            <remap from="~pose_in" to="pose_transformer/transformed_pose" />
            <remap from="~base_motion" to="$(arg whole_body_motion_base_motion)" />
        </node>

        <node pkg="mcr_pose_selector" type="pose_selector_node"
                name="pose_selector" output="screen">

            <!-- the cycle rate of the node (in hz) -->
            <param name="loop_rate"  type="double" value="10"/>

            <!-- List of poses(geometry_msgs/PoseArray) -->
            <remap from="~pose_list_in" to="whole_body_motion_calculator/poses_list" />

            <!-- Pose out(geometry_msgs/PoseStamped) -->
            <remap from="~pose_out" to="$(arg whole_body_motion_pose_out)" />
        </node>

        <node pkg="mir_whole_body_motion_calculator" type="whole_body_motion_calculator_pipeline_node"
        name="coordinator" output="screen">

            <!-- the node cycle rate (in hz) -->
            <param name="loop_rate" type="double" value="30"/>

            <remap from="~event_in" to="$(arg whole_body_motion_even_in)"/>
            <remap from="~event_out" to="$(arg whole_body_motion_even_out)"/>

            <!-- To trigger components -->
            <remap from="~start_pose_transformer"
                   to="pose_transformer/event_in"/>
            <remap from="~start_whole_body_motion_calculator"
                   to="whole_body_motion_calculator/event_in"/>
            <remap from="~start_path_pose_selector"
                   to="pose_selector/event_in"/>

            <!-- To get feedback from components -->
            <remap from="~pose_transformer_status"
                   to="pose_transformer/event_out"/>
            <remap from="~whole_body_motion_calculator_status"
                   to="whole_body_motion_calculator/event_out"/>
            <remap from="~path_pose_selector_status"
                   to="pose_selector/event_out"/>
        </node>
    </group>

</launch>
